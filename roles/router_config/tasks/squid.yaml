---

- name: Install squid
  become: yes
  ansible.builtin.apt:
    update_cache: yes
    name: squid-openssl
    state: present

- name: Ensure squid CA certificate directory exists
  become: yes
  ansible.builtin.file:
    path: /etc/squid/cert
    state: directory

- name: Get stats of squid ssl db
  become: yes
  ansible.builtin.stat:
    path: /var/spool/squid/ssl_db
  register: st

- name: Create/update squid proxy certificates
  become: yes
  block:

    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey_pipe:
        format: pkcs8
      register: private_key

    - name: Create certificate signing request (CSR) for self-signed certificate
      community.crypto.openssl_csr_pipe:
        privatekey_content: "{{ private_key.privatekey }}"
        organization_name: EPCC, The University of Edinburgh
        locality_name: Edinburgh
        country_name: UK
        basic_constraints:
          - 'CA:TRUE'
        basic_constraints_critical: true
        key_usage:
          - keyCertSign
        key_usage_critical: true
      register: csr

    - name: Create self-signed certificate from CSR
      community.crypto.x509_certificate_pipe:
        csr_content: "{{ csr.csr }}"
        privatekey_content: "{{ private_key.privatekey }}"
        provider: selfsigned
      register: certificate

    - name: Write squid CA certificate and private key file
      ansible.builtin.copy:
        content: "{{ private_key.privatekey }}{{ certificate.certificate }}"
        dest: /etc/squid/cert/squid_proxyCA.pem
        mode: 0400

    - name: Create extra certificates directory if it does not exist
      ansible.builtin.file:
        path: /usr/local/share/ca-certificates/extra/
        state: directory
        mode: 0755

    - name: Write CA certificate
      ansible.builtin.copy:
        content: "{{ certificate.certificate }}"
        dest: /usr/local/share/ca-certificates/extra/squid_proxyCA.crt
        mode: 0644

    - name: Remove squid ssl db
      ansible.builtin.file:
        path: /var/spool/squid/ssl_db
        state: absent

    - name: Configure squid to generate certificates
      become: yes
      command: /usr/lib/squid/security_file_certgen -c -s /var/spool/squid/ssl_db -M 4MB
      notify: Restart squid

    - name: Ensure owner for squid ssl db
      ansible.builtin.file:
        path: /var/spool/squid
        state: directory
        recurse: yes
        owner: proxy
        group: proxy

    - name: Store server certificate
      ansible.builtin.set_fact:
        squid_proxy_certificate: "{{ certificate.certificate }}"

  when: update_squid_ssl_certs|default('no'|bool) or not st.stat.exists


- name: Read existing squid proxy CA
  block:
    - name: Read squid proxy certificate file
      ansible.builtin.slurp:
        src: /usr/local/share/ca-certificates/extra/squid_proxyCA.crt
      register: certificate
    - name: Store squid proxy certificate in variable
      ansible.builtin.set_fact:
        squid_proxy_certificate: "{{ certificate.content | b64decode }}"
  when: squid_proxy_certificate is undefined

- name: Write allow domains config
  become: yes
  ansible.builtin.template:
    src: ../templates/allowlist_domains.txt.j2
    dest: /etc/squid/allowlist_domains.txt

- name: Write allow urls config
  become: yes
  ansible.builtin.template:
    src: ../templates/allowlist_urls.txt.j2
    dest: /etc/squid/allowlist_urls.txt

- name: Write squid config
  become: yes
  ansible.builtin.template:
    src: ../templates/squid.conf.j2
    dest: /etc/squid/squid.conf

- name: Restart squid
  become: yes
  ansible.builtin.service:
    name: squid
    state: restarted
